{"version":3,"sources":["logo.svg","StirlandsHelper.js","components/DataGrid.js","pages/Home.js","components/Authenticate.js","pages/Login.js","pages/Error404.js","components/Menu.js","components/LoginButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StirlandsHelper","method","formData","returnData","append","fetch","body","credentials","then","response","a","json","console","log","ajaxPost","FormData","DataGrid","props","state","data","columns","sort","user","selected","isOpenAdd","isOpenEdit","isOpenDelete","player","firstname","lastname","locationid","teamid","editPlayer","deletePlayer","locationData","teamData","playerData","dateregisteredraw","moment","dateofbirthraw","handleSelection","bind","handleDelete","handleAdd","handleEdit","getFormDetails","handleInputChange","handleComboChange","handleDateChange","newSelection","this","setState","newState","event","valueOverride","target","value","name","startsWith","checked","fieldname","substring","length","nameVersion","fieldName","selectedDate","rawFieldName","format","Object","keys","forEach","key","refreshData","resp","result","classes","undefined","Paper","className","noData","Typography","map","col","Icon","entries","Icons","find","toLowerCase","icon","field","headerStyle","textAlign","datatype","title","displayName","type","render","rowData","iconToRender","iconRender","defaultSort","endsWith","isHidden","hidden","cellStyle","rfuserrole","diableDelete","diableEdit","disableAdd","sortable","onSelectionChange","row","options","selection","pageSize","actions","tooltip","disabled","isFreeAction","onClick","rows","Modal","open","onClose","Card","modalForm","utils","MomentUtils","FormControl","TextField","label","id","placeholder","onBlur","defaultValue","Autocomplete","team","renderInput","params","variant","getOptionLabel","option","teamname","onChange","location","locationname","DatePicker","disableFuture","CardActions","Button","submit","addPlayer","handleLoginClick","Component","styles","theme","position","fontSize","display","alignItems","alignContent","justifyContent","placeContent","form","left","top","transform","minHeight","minWidth","padding","gap","paddingTop","backgroundColor","palette","secondary","main","color","contrastText","withTheme","withStyles","Home","isLoggedIn","auth","isAuthenticated","loadGrid","query","allowEdit","component","width","withRouter","Login","username","password","loginFailed","checkAuthentication","r","history","push","inputProps","step","formControl","labelProps","inputLabel","required","Container","grid","CardContent","error","InputLabelProps","onKeyPress","loginButton","style","placeSelf","height","gridAutoFlow","borderRadius","Error404","root","pathname","alignSelf","placeItems","gridAutoRows","marginLeft","Menu","drawerOpen","toggle","drawerTrigger","pages","toggleDrawer","children","rest","to","from","ListItemLink","primary","CustomLink","React","useMemo","forwardRef","linkProps","ref","ListItem","ListItemIcon","ListItemText","Drawer","elevation","List","page","iconName","route","exact","path","error404","LoginButton","paper","loggedInText","IconButton","Link","logout","ExitToApp","RouterLink","lb","textDecoration","maxWidth","muiTheme","createMuiTheme","blue","pink","App","handleDrawerState","foundPages","resolved","forceUpdate","Backdrop","backdrop","CircularProgress","CssBaseline","ThemeProvider","basename","AppBar","Toolbar","menuButton","edge","aria-label","background","border","boxShadow","zIndex","baseGrid","gridTemplateColumns","marginRight","spacing","flexGrow","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8476351f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export default class StirlandsHelper {\r\n\r\n\tstatic async ajaxPost(method, formData){\r\n\t\tlet returnData = {};\r\n\t\tformData.append('queryMethod', method);\r\n\t\tawait fetch('https://bsch-jjohn1.chi.ac.uk/DAP522/src/api/dbInferface.php', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t\tcredentials: \"same-origin\"})\r\n\t\t\t\t\t  .then(async response => { returnData = await response.json()});\r\n\t\tconsole.log(method + ' returned');\r\n\t\tconsole.log(returnData);\r\n\t\treturn returnData;\r\n\t}\r\n\r\n\tstatic async checkAuthentication() {\r\n\t\treturn await StirlandsHelper.ajaxPost('isLoggedIn', new FormData());\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport * as Icons from '@material-ui/icons';\r\nimport { withTheme, Typography, Switch, Button, Paper, CardActions, Card, Modal, FormControl, TextField, FormControlLabel } from '@material-ui/core';\r\nimport MaterialTable  from 'material-table';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\n\r\nclass DataGrid extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleSelection = this.handleSelection.bind(this);\r\n\t\tthis.handleDelete = this.handleDelete.bind(this);\r\n\t\tthis.handleAdd = this.handleAdd.bind(this);\r\n\t\tthis.handleEdit = this.handleEdit.bind(this);\r\n\t\tthis.getFormDetails = this.getFormDetails.bind(this);\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.handleComboChange = this.handleComboChange.bind(this);\r\n\t\tthis.handleDateChange = this.handleDateChange.bind(this);\r\n\t}\r\n\r\n\tstatic styles = (theme) =>{ \r\n\t\treturn {\r\n\t\t\tnoData: {\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\tfontSize: '20px',\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\talignContent: 'center',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tplaceContent: 'center',\r\n\t\t\t},\r\n\t\t\tform: {\r\n\t\t\t\tdisplay: 'grid'\r\n\t\t\t},\r\n\t\t\tmodalForm: {\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\tleft: '30%',\r\n\t\t\t\ttop: '50%',\r\n\t\t\t\ttransform: 'translate(50%, -50%)',\r\n\t\t\t\tminHeight: '50%',\r\n\t\t\t\tminWidth: '400px',\r\n\t\t\t\tpadding: '1rem',\r\n\t\t\t\tgap: '1rem'\r\n\t\t\t},\r\n\t\t\tsubmit: {\r\n\t\t\t\tpaddingTop: '10px',\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\tcolor: theme.palette.secondary.contrastText\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n    state = {\r\n\t\tdata: this.props.data,\r\n\t\tcolumns: this.props.columns,\r\n\t\tsort: this.props.sort,\r\n\t\tuser: this.props.user,\r\n\t\tselected: [],\r\n\t\tisOpenAdd: false,\r\n\t\tisOpenEdit: false,\r\n\t\tisOpenDelete: false,\r\n\t\tplayer: {\r\n\t\t\tfirstname: null,\r\n\t\t\tlastname: null,\r\n\t\t\tlocationid: null,\r\n\t\t\tteamid: null,\r\n\t\t},\r\n\t\teditPlayer: null,\r\n\t\tdeletePlayer: [],\r\n\t\tlocationData: null,\r\n\t\tteamData: null,\r\n\t\tplayerData: null,\r\n\t\tdateregisteredraw: new moment(),\r\n\t\tdateofbirthraw: new moment(),\r\n\t}\r\n\r\n\thandleSelection(newSelection) {\r\n\t\tthis.setState({ selected: newSelection, playerData: newSelection[0]});\r\n\t}\r\n\r\n\thandleDelete(selected){\r\n\t\tthis.setState({ isOpenDelete: !this.state.isOpenDelete });\r\n\t}\r\n\r\n\thandleEdit(){\r\n\t\tconst newState = !this.state.isOpenEdit;\r\n\t\tthis.setState({ isOpenEdit: newState });\r\n\t}\r\n\r\n\thandleAdd(){\r\n\t\tconst newState = !this.state.isOpenAdd;\r\n\t\tthis.setState({ isOpenAdd: newState });\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\t\r\n\t\tconsole.log('triggered update')\r\n\t\tconsole.log(this.state)\r\n\t}\r\n\r\n\thandleInputChange(event, valueOverride) {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.name.startsWith('is') ? target.checked : target.value;\r\n\t\tconst name = target.name;\r\n\t\tconsole.log(name)\r\n\t\tconsole.log(value)\r\n\t\tthis.setState({\r\n\t\t\t[name]: valueOverride ? valueOverride : value\r\n\t\t});\r\n\t}\r\n\r\n\thandleComboChange(event, data, fieldname) {\r\n\t\tconst name = fieldname.substring(0, fieldname.length - 2)\r\n\t\tconst nameVersion = name + 'name';\r\n\t\tconsole.log(event)\r\n\t\tconsole.log(data)\r\n\t\tconsole.log(nameVersion)\r\n\t\tthis.setState({\r\n\t\t\t[fieldname] : data[fieldname],\r\n\t\t\t[nameVersion] : data[nameVersion],\r\n\t\t\t[name]: data\r\n\t\t});\r\n\t}\r\n\r\n\thandleDateChange(fieldName, selectedDate){\r\n\t\tconst rawFieldName = `${fieldName}raw`;\r\n\t\tconsole.log(selectedDate.format('YYYY-MM-DD'))\r\n\t\tthis.setState({ \r\n\t\t\t[fieldName]: selectedDate.format('YYYY-MM-DD'),\r\n\t\t\t[rawFieldName]: selectedDate,\t\t\t\t\t\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tgetFormDetails(method){\r\n\t\tlet formData = new FormData();\r\n\t\tObject.keys(this.state.player).forEach(key => formData.append(key, this.state[key]));\r\n\t\tStirlandsHelper.ajaxPost(method, formData).then(this.props.refreshData);\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet { locationData, teamData, playerData } = this.state;\r\n\r\n\t\tif (this.state.selected[0] && !this.state.playerData) {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tformData.append(\"playerid\", this.state.selected[0])\r\n\t\t\tawait StirlandsHelper.ajaxPost(\"getPlayer\", formData).then(resp => {\r\n\t\t\t\tconsole.log(resp)\r\n\t\t\tplayerData = resp.result[0]});\r\n\t\t}\r\n\t\tif (!this.state.locationData || !this.state.teamData){\r\n\r\n\t\t\tawait StirlandsHelper.ajaxPost(\"locations\", new FormData()).then(resp => locationData = resp.result);\r\n\t\t\tawait StirlandsHelper.ajaxPost(\"teams\", new FormData()).then(resp => teamData = resp.result);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tthis.setState({ locationData, teamData, playerData });\r\n\t}\r\n\r\n    render() {\r\n\r\n\t\tconst classes = this.props.classes;\r\n\r\n\t\tif (this.state.data === undefined || this.state.columns === undefined){\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.noData}>\r\n\t\t\t\t\t<Typography>No data has been found!</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst data = this.state.data;\r\n\t\t\tconst columns = this.state.columns.map((col) => {\r\n\t\t\t\tlet Icon;\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t Icon = Object.entries(Icons).find(([name, exported]) => name.toLowerCase() === col.icon)[1]\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tIcon = Icons.Help\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(col.icon)\r\n\t\t\t\tfunction iconRender(rowData, iconToRender){\r\n\t\t\t\t\treturn rowData[col.key] === 1 ? <Icon /> : null\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet colConv = { \r\n\t\t\t\t\tfield: col.key,\r\n\t\t\t\t\theaderStyle: { textAlign: (col.datatype === 'numeric' || col.datatype === 'icon') ? \"center\" : \"left\" },\r\n\t\t\t\t\ttitle: <span className=\"columnHeader\" ><Icon />{col.displayName}</span>,\r\n\t\t\t\t\t...((col.datatype !== null && col.datatype !== 'icon') && { type: col.datatype }),\r\n\t\t\t\t\t...(col.datatype === 'icon' && { type: 'boolean', render: rowData =>  iconRender(rowData, col.icon)}),\r\n\t\t\t\t\t...(col.sort !== null && { defaultSort: col.sort === 1 ? 'asc' : 'desc' }),\r\n\t\t\t\t\t...((col.key.endsWith('id') || col?.isHidden) && { hidden: true } ),\r\n\t\t\t\t\t...((col.datatype === 'numeric' || col.datatype === 'icon') && { cellStyle: { textAlign: 'center' } }),\r\n\t\t\t\t} \r\n\t\t\t\treturn colConv; \r\n\t\t\t});\r\n\r\n\t\t\t// Only allow editing if user is an administrator\r\n\t\t\tif (this.state.user?.rfuserrole === 'Administrator'){\r\n\t\t\t\tconsole.log(this.state)\r\n\t\t\t\tlet diableDelete = this.state.selected.length < 1;\r\n\t\t\t\tlet diableEdit = this.state.selected.length !== 1;\r\n\t\t\t\tlet disableAdd = this.state.selected.length !== 0;\r\n\t\t\t\t\r\n\t\t\t\tconst Form = () =>{\r\n\t\t\t\t\tif (this.state.isOpenAdd) {\r\n\t\t\t\t\t\tconsole.log('state in render');\r\n\t\t\t\t\t\tconsole.log(this.state);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Modal open={this.state.isOpenAdd} onClose={(event) => this.handleEdit()}>\r\n\t\t\t\t\t\t\t\t<Card className={classes.modalForm}>\r\n\t\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state?.firstname}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"firstname\" name=\"firstname\" placeholder=\"Enter first name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={this.state?.lastname}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"lastname\" name=\"lastname\" placeholder=\"Enter last name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.teamData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"teamid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"teamid\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state?.team}\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Team\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.teamname }\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event, data) => this.handleComboChange(event, data, 'teamid')}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.locationData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state?.location}\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Location\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.locationname }\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event, data) => this.handleComboChange(event, data, 'locationid')}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<DatePicker disableFuture format=\"DD-MM-YYYY\" id=\"dateregistered\" name=\"dateregistered\" label=\"Date Registered\" onChange={(moment) => this.handleDateChange(\"dateregistered\", moment)} />\r\n\t\t\t\t\t\t\t\t\t\t<DatePicker disableFuture format=\"DD-MM-YYYY\" id=\"dateofbirth\" value={this.state.dateofbirthraw} name=\"dateofbirth\" label=\"D.O.B\" onChange={(moment) => this.handleDateChange(\"dateofbirth\", moment)} />\r\n\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button className={classes.submit} onClick={(event) => this.getFormDetails(event)}>Add</Button>\r\n\t\t\t\t\t\t\t\t\t</CardActions>\t\t\r\n\t\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (this.state.isOpenEdit){\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Modal open={this.state.isOpenAdd} onClose={(event) => this.handleEdit()}>\r\n\t\t\t\t\t\t\t\t<Card className={classes.modalForm}>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.player['firstname'] ? this.state.addPlayer[\"firstname\"] : '' }\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"firstname\" name=\"firstname\" placeholder=\"Enter first name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.addPlayer[\"lastname\"] ? this.state.addPlayer[\"lastname\"] : '' }\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"lastname\" name=\"lastname\" placeholder=\"Enter last name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.teamData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Team\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.teamname }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.locationData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Location\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.locationname }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={(event) => this.handleLoginClick(event)}>Login</Button>\r\n\t\t\t\t\t\t\t\t\t</CardActions>\t\t\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else return null;\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<MaterialTable \r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t\t\tsortable\r\n\t\t\t\t\t\t\tonSelectionChange={ row => this.handleSelection(row)}\r\n\t\t\t\t\t\t\toptions={{ selection: true, pageSize: 10}}\r\n\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttooltip: 'Add a new record',\r\n\t\t\t\t\t\t\t\t\ticon: 'add',\r\n\t\t\t\t\t\t\t\t\tdisabled: disableAdd,\r\n\t\t\t\t\t\t\t\t\tisFreeAction: true,\r\n\t\t\t\t\t\t\t\t\tonClick: (event, rows) => this.handleAdd()\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttooltip: 'Edit the selected row',\r\n\t\t\t\t\t\t\t\t\ticon: 'edit',\r\n\t\t\t\t\t\t\t\t\tdisabled: diableEdit,\r\n\t\t\t\t\t\t\t\t\tonClick: (event, rows) => this.handleEdit(rows)\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttooltip: 'Delete Selected row(s)',\r\n\t\t\t\t\t\t\t\t\ticon: 'delete',\r\n\t\t\t\t\t\t\t\t\tdisabled: diableDelete,\r\n\t\t\t\t\t\t\t\t\tonClick: (event, rows) => this.handleDelete(rows)\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<Form />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t\tsortable\r\n\t\t\t\t\t\toptions={{pageSize: 10}}\r\n\t\t\t\t\t/>);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport default withTheme(withStyles(DataGrid.styles)(DataGrid))","import React, { Component } from 'react';\r\nimport { Typography, Paper } from '@material-ui/core';\r\nimport DataGrid from '../components/DataGrid';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.refreshData = this.refreshData.bind(this);\r\n    }\r\n\r\n    static styles = {\r\n\t\tnoData: {\r\n\t\t\tdisplay: 'grid',\r\n\t\t\talignItems: 'center',\r\n\t\t\talignContent: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n            placeContent: 'center',\r\n            width: '50%'\r\n\t\t}\r\n\t}\r\n\r\n    state = {\r\n        isLoggedIn: this.props.auth.isAuthenticated,\r\n        data: undefined,\r\n        columns: undefined,\r\n        loadGrid: false,\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let response;\r\n\r\n        await StirlandsHelper.ajaxPost(this.props.query, new FormData()).then( resp => {\r\n            response = resp; \r\n        });\r\n\r\n        this.setState({ data: response.data.result, columns: response.columns, loadGrid: response?.data?.result?.length > 1 });\r\n    }\r\n\r\n    refreshData(){\r\n        let response;\r\n\r\n        StirlandsHelper.ajaxPost(this.props.query, new FormData()).then( resp => {\r\n            response = resp; \r\n        });\r\n\r\n        this.setState({ data: response.data.result, columns: response.columns, loadGrid: response?.data?.result?.length > 1 });\r\n    }\r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n\r\n        if (this.state.loadGrid){\r\n            return (\r\n                <DataGrid user={this.props.auth.user} refreshData={this.refreshData} data={this.state.data} columns={this.state.columns} allowEdit={true} title={this.props.title} />\r\n            );\r\n        } else {\r\n            return (\r\n                <Paper className={classes.noData}>\r\n\t\t\t\t\t<Typography variant=\"h3\" component=\"p\">No data has been found!</Typography>\r\n\t\t\t\t</Paper>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(Home.styles)(Home))","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nexport default class Authenticate extends Component {\r\n\r\n\r\n\trender() {\r\n\t\tconsole.log('Called Authenticate Render')\r\n\t\treturn this.props.isAuthenticated ? (\r\n\t\t\t<div>Not Authenticated</div>\r\n\t\t) : (\r\n\t\t\t<div>Authenticated</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { TextField, FormControl, Card, CardActions, CardContent } from '@material-ui/core';\r\nimport { Container, Button, withStyles, withTheme } from '@material-ui/core';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\nimport { Router, Redirect, useHistory, withRouter } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.handleLoginClick = this.handleLoginClick.bind(this);\r\n\t}\r\n\r\n\tstate = { \r\n\t\tusername: null, \r\n\t\tpassword: null, \r\n\t\tisLoggedIn: false,\r\n\t\tloginFailed: null,\r\n\t}\r\n\r\n\tstatic style = theme => {\r\n\t\treturn {\r\n\t\t\tgrid: {\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tplaceContent: 'center',\r\n\t\t\t\tplaceSelf: 'center',\r\n\t\t\t\theight: '100%',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t},\r\n\t\t\tform: {\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridAutoFlow: 'row',\r\n\t\t\t\tgap: '1.5rem',\r\n\t\t\t\theight: 'min-content',\r\n\t\t\t},\r\n\t\t\tloginButton: {\r\n\t\t\t\tpadding: '5px',\r\n\t\t\t\tborderRadius: '5px', \r\n\t\t\t},\r\n\t\t\tformControl: {\r\n\t\t\t\tpadding: '2rem',\r\n\t\t\t\tborderRadius: '5px',\r\n\t\t\t},\r\n\t\t\tinputLabel: {\r\n\t\t\t\tfontSize: '1.2rem'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet auth;\r\n\t\tawait StirlandsHelper.checkAuthentication().then(resp =>{\r\n\t\t\tconsole.log(resp);\r\n\t\t\tauth = resp;\r\n\t\t});\r\n\t\t\r\n\t\tthis.setState({isLoggedIn: auth.isAuthenticated});\r\n\t}\r\n\r\n\thandleLoginClick(event){\r\n\t\tlet formData = new FormData();\r\n\t\tObject.keys(this.state).forEach(key => formData.append(key, this.state[key]));\r\n\r\n\t\tlet resp = StirlandsHelper.ajaxPost(\"login\", formData);\r\n\t\tresp.then(r => {\r\n\t\t\tconsole.log(r);\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoggedIn: r.isAuthenticated,\r\n\t\t\t\tloginFailed: !r.isAuthenticated\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { history, classes } = this.props;\r\n\r\n\t\tif (this.state.isLoggedIn)\r\n\t\t\thistory.push(\"/players\");\r\n\r\n\t\tconst inputProps = {\r\n\t\t\tstep: 300,\r\n\t\t\tclassName: classes.formControl\r\n\t\t}\r\n\r\n\t\tconst labelProps = {\r\n\t\t\tclassName: classes.inputLabel,\r\n\t\t\trequired: true,\r\n\t\t\tcolor: 'primary',\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Container className={classes.grid}>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<form className={classes.form}>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\terror={this.state.loginFailed}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={labelProps} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Username\" \r\n\t\t\t\t\t\t\t\t\tinputProps={inputProps} \r\n\t\t\t\t\t\t\t\t\tclassName={classes.formControl} \r\n\t\t\t\t\t\t\t\t\tid=\"username\" name=\"usernmae\" placeholder=\"Enter Username\" \r\n\t\t\t\t\t\t\t\t\tonChange={ (event) => { this.setState({ username: event.target.value }) }} \r\n\t\t\t\t\t\t\t\t\tonKeyPress={(event) => { \r\n\t\t\t\t\t\t\t\t\t\tif (event.key === 'Enter' && (this.state.username && this.state.password)){\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleLoginClick(event);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\terror={this.state.loginFailed} \r\n\t\t\t\t\t\t\t\t\tInputLabelProps={labelProps} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\" \r\n\t\t\t\t\t\t\t\t\tinputProps={inputProps} \r\n\t\t\t\t\t\t\t\t\tclassName={classes.formControl} \r\n\t\t\t\t\t\t\t\t\tid=\"password\" name=\"password\" type=\"password\" placeholder=\"Enter password here\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) =>  this.setState({password: event.target.value})}\r\n\t\t\t\t\t\t\t\t\tonKeyPress={(event) => { \r\n\t\t\t\t\t\t\t\t\t\tif (event.key === 'Enter' && (this.state.username && this.state.password)){\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleLoginClick(event);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button className={classes.loginButton} onClick={(event) => this.handleLoginClick(event)}>Login</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withTheme(withStyles(Login.style)(Login)));","import React, { Component } from 'react';\r\nimport { Typography, Paper, Card } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nclass Error404 extends Component {\r\n\tstatic styles = {\r\n\t\troot: {\r\n\t\t\tplaceSelf: 'center',\r\n\t\t\talignSelf: 'center',\r\n\t\t\talignItems: 'center',\r\n\t\t\tplaceItems: 'center',\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridAutoRows: '4rem',\r\n\t\t\twidth: 'calc(100% - 65%)',\r\n\t\t\tmarginLeft: 'calc(100% - 75%)',\r\n\t\t\tpadding: '10px',\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n\t\tconst classes = this.props.classes;\r\n\t\tconsole.log(this.props.location);\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.root}>\r\n\t\t\t\t<Typography variant=\"h4\" component=\"p\">Uh oh! The page: {this.props.location.pathname} doesn't exist!</Typography>\r\n\t\t\t\t<Typography variant=\"caption\" component=\"p\">Please use the menu to navigate to a page that does!</Typography>\r\n\t\t\t</Paper>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(Error404.styles)(Error404))","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link as RouterLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport Home from '../pages/Home';\r\nimport * as Icons from '@material-ui/icons';\r\nimport { MenuBook, Menu as MenuIcon } from '@material-ui/icons';\r\nimport { Button, Paper, List, ListItem, ListItemText, ListItemIcon, withTheme, withStyles } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Authenticate from \"./Authenticate\";\r\nimport Login from \"../pages/Login\";\r\nimport Error404 from \"../pages/Error404\";\r\n\r\nclass Menu extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.toggleDrawer = this.toggleDrawer.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\tisAuthenticated: this.props.isAuthenticated,\r\n\t\tuser: this.props.user,\r\n\t\tdrawerOpen: this.props.drawerOpen,\r\n\t\ttoggle: this.props.drawerTrigger,\r\n\t\tpages: this.props.pages,\r\n\t}\r\n\r\n    static style = theme => {\r\n    \treturn {\r\n    \t\tgrid: {\r\n    \t\t\tplaceSelf: 'center',\r\n    \t\t\theight: '100%',\r\n    \t\t\twidth: '100%',\r\n\t\t\t},\r\n\t\t\terror404: {\r\n\t\t\t\tplaceSelf: 'center',\r\n\t\t\t\talignSelf: 'center',\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridAutoRows: '4rem',\r\n\t\t\t\twidth: '40%',\r\n\r\n\t\t\t}\r\n    \t}\r\n    }\r\n\r\n\r\n\tProtectedRoute({ children, isAuthenticated, ...rest }) {\t\r\n\t\treturn (\r\n\t\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={ ({location}) =>\r\n\t\t\t\tisAuthenticated ?\t(children) : (\r\n\t\t\t\t<Redirect\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\tstate: { from: location }\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\ttoggleDrawer = () => this.props.drawerTrigger;\r\n\r\n\trender(){\r\n\t\tconst getIcon = (iconName) => Object.entries(Icons).find(([name, exported]) => name.toLowerCase() === iconName)[1];\r\n\t\tconst  { history, classes } = this.props;\r\n\r\n\t\tfunction ListItemLink (props){\r\n\t\t\tconst { icon, primary, to, onClick } = props;\r\n\r\n\t\t\t  const CustomLink = React.useMemo(\r\n\t\t\t\t() =>\r\n\t\t\t\tReact.forwardRef((linkProps, ref) => (\r\n\t\t\t\t\t<RouterLink ref={ref} to={to} {...linkProps} />\r\n\t\t\t\t)),\r\n\t\t\t\t[to],\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<li onClick={onClick}>\r\n\t\t\t\t\t<ListItem component={CustomLink}>\r\n\t\t\t\t\t\t{icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n\t\t\t\t\t\t<ListItemText primary={primary} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className={classes.grid}>\r\n\t\t\t\t<Drawer open={this.props.drawerOpen}>\r\n\t\t\t\t\t<Paper elevation={0}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItemLink primary=\"Home\" to=\"/players\" icon={ < Icons.PlayArrow />}/>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.pages.map(page => {\r\n\t\t\t\t\t\t\t\t\tconst Icon = getIcon(page.icon);\r\n\t\t\t\t\t\t\t\t\treturn <ListItemLink key={page.route} primary={page.title} to={page.route} icon={ <Icon /> } onClick={this.props.drawerTrigger}/>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Drawer>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<Redirect to=\"/players\"/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/players\">\r\n\t\t\t\t\t\t<Home query=\"getPlayers\" title=\"Players\" auth={{ isAuthenticated: this.state.isAuthenticated, user: this.state.user }}/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path=\"/login\">\r\n\t\t\t\t\t\t<Login/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t\t<Error404 className={classes.error404}/>\t\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withTheme(withStyles(Menu.style)(Menu)))","import { ExitToApp } from '@material-ui/icons';\r\nimport React, { Component } from 'react';\r\nimport { Link as RouterLink, withRouter, Router } from 'react-router-dom';\r\nimport { withStyles, withTheme } from '@material-ui/core/styles';\r\nimport { Link, Typography, Paper, IconButton, Button } from '@material-ui/core';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\n\r\nclass LoginButton extends Component {\r\n\tstate = {\r\n\t\tisLoggedIn: this.props.isAuthenticated,\r\n\t\tuser: this.props.user\r\n\t}\r\n\r\n\r\n\tstatic style = theme =>  {\r\n\t\treturn {\r\n\t\t\tlb: {\r\n\t\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\ttextDecoration: 'none',\r\n\t\t\t},\r\n\t\t\r\n\t\t\tloginButton: {\r\n\t\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\ttextDecoration: 'none',\r\n\t\t\t},\r\n\t\t\tloggedInText: {\r\n\t\t\t\tmaxWidth: '100%',\r\n\t\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\t},\r\n\t\t\tpaper: {\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\theight: '2rem',\r\n\t\t\t\twidth: '14rem',\r\n\t\t\t\tplaceContent: 'center',\r\n\t\t\t\talignContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridAutoFlow: 'column',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet render;\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\tif (this.state.isLoggedIn){\r\n\t\t\trender = (\r\n\t\t\t\t<Paper className={classes.paper} elevation={3}>\r\n\t\t\t\t\t<Typography component=\"span\" className={classes.loggedInText}>Logged in as { this.state.user.username }</Typography>\r\n\t\t\t\t\t<IconButton component={Link} to=\"/\" onClick={this.props.logout}>\r\n\t\t\t\t\t\t<ExitToApp />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Paper>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\trender = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link component={RouterLink} to=\"/login\" className={ classes.lb }>\r\n\t\t\t\t\t\t<Button className={ classes.loginButton }>\r\n\t\t\t\t\t\t\tlogin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport default withTheme(withStyles(LoginButton.style)(LoginButton));\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Menu  from './components/Menu';\r\nimport LoginButton  from './components/LoginButton';\r\nimport StirlandsHelper from './StirlandsHelper'\r\nimport { Backdrop, CircularProgress, CssBaseline, AppBar, Typography, IconButton, Toolbar, ThemeProvider} from '@material-ui/core';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\nimport './App.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { blue, pink } from '@material-ui/core/colors'\r\n\r\nconst muiTheme = createMuiTheme({\r\n  palette: {\r\n  \tprimary: {\r\n  \t\tmain: blue[700],\r\n\t  },\r\n\t  secondary: {\r\n\t\tmain: pink[500]\r\n\t  },\r\n  },\r\n});\r\n\r\nconst styles = (theme = muiTheme) => {\r\n\treturn {\r\n\t\troot: {\r\n\t\t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n\t\t\tborder: 0,\r\n\t\t\tborderRadius: 3,\r\n\t\t\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n\t\t\tcolor: 'black',\r\n\t\t\theight: 48,\r\n\t\t\tpadding: '0 30px',\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridAutoFlow: 'column'\r\n\t\t},\r\n\t\tbackdrop: {\r\n\t\t\tzIndex: 100,\r\n\t\t\tcolor: '#999'\r\n\t\t},\r\n\t\tbaseGrid: {\r\n\t\t\tbackgroundColor: 'rgb(100, 100, 100)',\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridTemplateColumns: '1fr 3fr',\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1,\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleDrawerState = this.handleDrawerState.bind(this);\r\n\t\tthis.logout = this.logout.bind(this);\r\n\t}\r\n\t\r\n\tstate = {\r\n\t\tisAuthenticated: null,\r\n\t\tuser: null,\r\n\t\topen: true,\r\n\t\tdrawerOpen: false,\r\n\t\tpages: [],\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet auth, foundPages;\r\n\t\tawait StirlandsHelper.checkAuthentication().then(resp => {\r\n\t\t\tauth = resp;\r\n\t\t});\r\n\r\n\t\tawait StirlandsHelper.ajaxPost(\"pages\", new FormData()).then(resp =>{\r\n\t\t\tfoundPages = resp;\r\n\t\t});\r\n\r\n\t\tthis.setState({ isAuthenticated: auth.isAuthenticated, user: auth.user[0], pages: foundPages })\r\n\t}\r\n\r\n\thandleDrawerState(){\r\n\t\tthis.setState({ drawerOpen: !this.state.drawerOpen });\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tStirlandsHelper.ajaxPost(\"logout\", new FormData()).then(resolved => resolved);\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst handleClose = () => {\r\n\t\t\tthis.setState({ open: false});\r\n\t\t};\r\n\r\n\t\tif (this.state.isAuthenticated === null){\r\n\t\t\treturn (\r\n\t\t\t\t<Backdrop className={classes.backdrop} open={ this.state.open } onClick={handleClose}>\r\n\t\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t\t</Backdrop>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<CssBaseline>\r\n\t\t\t\t\t<ThemeProvider theme={muiTheme}>\r\n\t\t\t\t\t\t<Router basename=\"DAP522/assignment/\">\r\n\t\t\t\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t\t\t<IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\"  onClick={this.handleDrawerState} >\r\n\t\t\t\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h6\"> Stirlands Cricket Club </Typography>\r\n\t\t\t\t\t\t\t\t\t<LoginButton  logout={this.logout} isAuthenticated={ this.state.isAuthenticated } user={ this.state.user } />\r\n\t\t\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t\t\t<div className=\"rootGrid\">\r\n\t\t\t\t\t\t\t\t<Menu  pages={this.state.pages} drawerOpen={this.state.drawerOpen} drawerTrigger={this.handleDrawerState} className={classes.root} isAuthenticated={this.state.isAuthenticated} user={this.state.user}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Router>\r\n\t\t\t\t\t</ThemeProvider>\r\n\t\t\t\t</CssBaseline>\r\n\t\t\t);\r\n\t\t}\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
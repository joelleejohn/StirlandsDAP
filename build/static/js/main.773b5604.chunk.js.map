{"version":3,"sources":["logo.svg","StirlandsHelper.js","components/DataGrid.js","pages/Home.js","components/Authenticate.js","pages/Login.js","pages/Error404.js","components/Menu.js","components/LoginButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StirlandsHelper","method","formData","returnData","append","fetch","body","credentials","then","response","a","json","console","log","ajaxPost","FormData","DataGrid","props","state","data","columns","sort","user","selected","isOpenAdd","isOpenEdit","isOpenDelete","player","firstname","lastname","locationid","teamid","editPlayer","deletePlayer","locationData","teamData","playerData","handleSelection","bind","handleDelete","handleAdd","handleEdit","getFormDetails","handleInputChange","newSelection","this","setState","newState","event","prefix","target","value","name","startsWith","checked","Object","keys","forEach","key","refreshData","resp","result","classes","undefined","Paper","className","noData","Typography","map","col","Icon","entries","Icons","find","toLowerCase","icon","field","headerStyle","textAlign","datatype","title","displayName","type","render","rowData","iconToRender","iconRender","defaultSort","endsWith","isHidden","hidden","cellStyle","rfuserrole","diableDelete","length","diableEdit","disableAdd","sortable","onSelectionChange","row","options","selection","pageSize","actions","tooltip","disabled","isFreeAction","onClick","rows","Modal","open","onClose","Card","modalForm","FormControl","TextField","label","id","placeholder","onBlur","Autocomplete","locationname","renderInput","params","variant","getOptionLabel","option","teamname","onChange","CardActions","Button","handleLoginClick","addPlayer","Component","styles","position","fontSize","display","alignItems","alignContent","justifyContent","placeContent","form","left","top","transform","minHeight","minWidth","padding","withStyles","Home","isLoggedIn","auth","isAuthenticated","loadGrid","query","allowEdit","component","width","withRouter","Login","username","password","loginFailed","checkAuthentication","r","history","push","inputProps","step","formControl","labelProps","inputLabel","required","color","Container","grid","CardContent","error","InputLabelProps","onKeyPress","loginButton","style","theme","placeSelf","height","gridAutoFlow","gap","borderRadius","withTheme","Error404","location","root","pathname","alignSelf","placeItems","gridAutoRows","marginLeft","Menu","drawerOpen","toggle","drawerTrigger","pages","toggleDrawer","children","rest","to","from","ListItemLink","primary","CustomLink","React","useMemo","forwardRef","linkProps","ref","ListItem","ListItemIcon","ListItemText","Drawer","elevation","List","page","iconName","route","exact","path","error404","LoginButton","paper","loggedInText","IconButton","Link","logout","ExitToApp","RouterLink","lb","palette","secondary","contrastText","backgroundColor","main","textDecoration","maxWidth","muiTheme","createMuiTheme","blue","pink","App","handleDrawerState","foundPages","resolved","forceUpdate","Backdrop","backdrop","CircularProgress","CssBaseline","ThemeProvider","basename","AppBar","Toolbar","menuButton","edge","aria-label","background","border","boxShadow","zIndex","baseGrid","gridTemplateColumns","marginRight","spacing","flexGrow","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.773b5604.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export default class StirlandsHelper {\r\n\r\n\tstatic async ajaxPost(method, formData){\r\n\t\tlet returnData = {};\r\n\t\tformData.append('queryMethod', method);\r\n\t\tawait fetch('https://bsch-jjohn1.chi.ac.uk/DAP522/src/api/dbInferface.php', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t\tcredentials: \"same-origin\"})\r\n\t\t\t\t\t  .then(async response => { returnData = await response.json()});\r\n\t\tconsole.log(method + ' returned');\r\n\t\tconsole.log(returnData);\r\n\t\treturn returnData;\r\n\t}\r\n\r\n\tstatic async checkAuthentication() {\r\n\t\treturn await StirlandsHelper.ajaxPost('isLoggedIn', new FormData());\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport * as Icons from '@material-ui/icons';\r\nimport { Typography, Button, Paper, CardActions, Card, Modal, FormControl, TextField} from '@material-ui/core';\r\nimport MaterialTable  from 'material-table';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\n\r\nclass DataGrid extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleSelection = this.handleSelection.bind(this);\r\n\t\tthis.handleDelete = this.handleDelete.bind(this);\r\n\t\tthis.handleAdd = this.handleAdd.bind(this);\r\n\t\tthis.handleEdit = this.handleEdit.bind(this);\r\n\t\tthis.getFormDetails = this.getFormDetails.bind(this);\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\r\n\tstatic styles = {\r\n\t\tnoData: {\r\n\t\t\tposition: 'absolute',\r\n\t\t\tfontSize: '20px',\r\n\t\t\tdisplay: 'grid',\r\n\t\t\talignItems: 'center',\r\n\t\t\talignContent: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tplaceContent: 'center',\r\n\t\t},\r\n\t\tform: {\r\n\t\t\tdisplay: 'grid'\r\n\t\t},\r\n\t\tmodalForm: {\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tposition: 'absolute',\r\n\t\t\tleft: '30%',\r\n\t\t\ttop: '50%',\r\n\t\t\ttransform: 'translate(50%, -50%)',\r\n\t\t\tminHeight: '50%',\r\n\t\t\tminWidth: '400px',\r\n\t\t\tpadding: '1rem',\r\n\t\t}\r\n\t}\r\n\r\n    state = {\r\n\t\tdata: this.props.data,\r\n\t\tcolumns: this.props.columns,\r\n\t\tsort: this.props.sort,\r\n\t\tuser: this.props.user,\r\n\t\tselected: [],\r\n\t\tisOpenAdd: false,\r\n\t\tisOpenEdit: false,\r\n\t\tisOpenDelete: false,\r\n\t\tplayer: {\r\n\t\t\tfirstname: null,\r\n\t\t\tlastname: null,\r\n\t\t\tlocationid: null,\r\n\t\t\tteamid: null,\r\n\t\t},\r\n\t\teditPlayer: null,\r\n\t\tdeletePlayer: [],\r\n\t\tlocationData: null,\r\n\t\tteamData: null,\r\n\t\tplayerData: null,\r\n\t}\r\n\r\n\thandleSelection(newSelection) {\r\n\t\tthis.setState({ selected: newSelection, playerData: newSelection[0]});\r\n\t}\r\n\r\n\thandleDelete(selected){\r\n\t\tthis.setState({ isOpenDelete: !this.state.isOpenDelete });\r\n\t}\r\n\r\n\thandleEdit(){\r\n\t\tconst newState = !this.state.isOpenEdit;\r\n\t\tthis.setState({ isOpenEdit: newState });\r\n\t}\r\n\r\n\thandleAdd(){\r\n\t\tconst newState = !this.state.isOpenAdd;\r\n\t\tthis.setState({ isOpenAdd: newState });\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\t\r\n\t\tconsole.log('triggered update')\r\n\t\tconsole.log(this.state)\r\n\t}\r\n\r\n\thandleInputChange(event, prefix) {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.name.startsWith('is') ? target.checked : target.value;\r\n\t\tconst name = target.name;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tgetFormDetails(method){\r\n\t\tlet formData = new FormData();\r\n\t\tObject.keys(this.state.player).forEach(key => formData.append(key, this.state[key]));\r\n\t\tStirlandsHelper.ajaxPost(method, formData).then(this.props.refreshData);\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet { locationData, teamData, playerData } = this.state;\r\n\r\n\t\tif (this.state.selected[0] && !this.state.playerData) {\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tformData.append(\"playerid\", this.state.selected[0])\r\n\t\t\tawait StirlandsHelper.ajaxPost(\"getPlayer\", formData).then(resp => {\r\n\t\t\t\tconsole.log(resp)\r\n\t\t\tplayerData = resp.result[0]});\r\n\t\t}\r\n\t\tif (!this.state.locationData || !this.state.teamData){\r\n\r\n\t\t\tawait StirlandsHelper.ajaxPost(\"locations\", new FormData()).then(resp => locationData = resp.result);\r\n\t\t\tawait StirlandsHelper.ajaxPost(\"teams\", new FormData()).then(resp => teamData = resp.result);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tthis.setState({ locationData, teamData, playerData });\r\n\t}\r\n\r\n    render() {\r\n\r\n\t\tconst classes = this.props.classes;\r\n\r\n\t\tif (this.state.data === undefined || this.state.columns === undefined){\r\n\t\t\treturn (\r\n\t\t\t\t<Paper className={classes.noData}>\r\n\t\t\t\t\t<Typography>No data has been found!</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst data = this.state.data;\r\n\t\t\tconst columns = this.state.columns.map((col) => {\r\n\t\t\t\tlet Icon;\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t Icon = Object.entries(Icons).find(([name, exported]) => name.toLowerCase() === col.icon)[1]\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tIcon = Icons.Help\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(col.icon)\r\n\t\t\t\tfunction iconRender(rowData, iconToRender){\r\n\t\t\t\t\treturn rowData[col.key] === 1 ? <Icon /> : null\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet colConv = { \r\n\t\t\t\t\tfield: col.key,\r\n\t\t\t\t\theaderStyle: { textAlign: (col.datatype === 'numeric' || col.datatype === 'icon') ? \"center\" : \"left\" },\r\n\t\t\t\t\ttitle: <span className=\"columnHeader\" ><Icon />{col.displayName}</span>,\r\n\t\t\t\t\t...((col.datatype !== null && col.datatype !== 'icon') && { type: col.datatype }),\r\n\t\t\t\t\t...(col.datatype === 'icon' && { type: 'boolean', render: rowData =>  iconRender(rowData, col.icon)}),\r\n\t\t\t\t\t...(col.sort !== null && { defaultSort: col.sort === 1 ? 'asc' : 'desc' }),\r\n\t\t\t\t\t...((col.key.endsWith('id') || col?.isHidden) && { hidden: true } ),\r\n\t\t\t\t\t...((col.datatype === 'numeric' || col.datatype === 'icon') && { cellStyle: { textAlign: 'center' } }),\r\n\t\t\t\t} \r\n\t\t\t\treturn colConv; \r\n\t\t\t});\r\n\r\n\t\t\t// Only allow editing if user is an administrator\r\n\t\t\tif (this.state.user?.rfuserrole === 'Administrator'){\r\n\t\t\t\tconsole.log(this.state)\r\n\t\t\t\tlet diableDelete = this.state.selected.length < 1;\r\n\t\t\t\tlet diableEdit = this.state.selected.length !== 1;\r\n\t\t\t\tlet disableAdd = this.state.selected.length !== 0;\r\n\t\t\t\t\r\n\t\t\t\tconst Form = () =>{\r\n\t\t\t\t\tif (this.state.isOpenAdd) {\r\n\t\t\t\t\t\tconsole.log('state in render');\r\n\t\t\t\t\t\tconsole.log(this.state);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Modal open={this.state.isOpenAdd} onClose={(event) => this.handleEdit()}>\r\n\t\t\t\t\t\t\t\t<Card className={classes.modalForm}>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.player?.firstname}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"firstname\" name=\"firstname\" placeholder=\"Enter first name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.player?.lastname}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"lastname\" name=\"lastname\" placeholder=\"Enter last name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonBlur={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.teamData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.playerData?.locationname}\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Team\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.teamname }\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event, data) => this.handleInputChange()}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.locationData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Location\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.locationname }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={(event) => this.handleLoginClick(event)}>Login</Button>\r\n\t\t\t\t\t\t\t\t\t</CardActions>\t\t\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (this.state.isOpenEdit){\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Modal open={this.state.isOpenAdd} onClose={(event) => this.handleEdit()}>\r\n\t\t\t\t\t\t\t\t<Card className={classes.modalForm}>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.player['firstname'] ? this.state.addPlayer[\"firstname\"] : '' }\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"firstname\" name=\"firstname\" placeholder=\"Enter first name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.addPlayer[\"lastname\"] ? this.state.addPlayer[\"lastname\"] : '' }\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"lastname\" name=\"lastname\" placeholder=\"Enter last name\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) =>  this.handleInputChange(event)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.teamData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Team\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.teamname }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Autocomplete \r\n\t\t\t\t\t\t\t\t\t\toptions={this.state.locationData}\r\n\t\t\t\t\t\t\t\t\t\tid=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"locationid\"\r\n\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Location\" variant=\"outlined\"/>}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.locationname }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={(event) => this.handleLoginClick(event)}>Login</Button>\r\n\t\t\t\t\t\t\t\t\t</CardActions>\t\t\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else return null;\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<MaterialTable \r\n\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t\t\tsortable\r\n\t\t\t\t\t\t\tonSelectionChange={ row => this.handleSelection(row)}\r\n\t\t\t\t\t\t\toptions={{ selection: true, pageSize: 10}}\r\n\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttooltip: 'Add a new record',\r\n\t\t\t\t\t\t\t\t\ticon: 'add',\r\n\t\t\t\t\t\t\t\t\tdisabled: disableAdd,\r\n\t\t\t\t\t\t\t\t\tisFreeAction: true,\r\n\t\t\t\t\t\t\t\t\tonClick: (event, rows) => this.handleAdd()\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttooltip: 'Edit the selected row',\r\n\t\t\t\t\t\t\t\t\ticon: 'edit',\r\n\t\t\t\t\t\t\t\t\tdisabled: diableEdit,\r\n\t\t\t\t\t\t\t\t\tonClick: (event, rows) => this.handleEdit(rows)\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttooltip: 'Delete Selected row(s)',\r\n\t\t\t\t\t\t\t\t\ticon: 'delete',\r\n\t\t\t\t\t\t\t\t\tdisabled: diableDelete,\r\n\t\t\t\t\t\t\t\t\tonClick: (event, rows) => this.handleDelete(rows)\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<Form />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MaterialTable\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t\tsortable\r\n\t\t\t\t\t\toptions={{pageSize: 10}}\r\n\t\t\t\t\t/>);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport default withStyles(DataGrid.styles)(DataGrid)","import React, { Component } from 'react';\r\nimport { Typography, Paper } from '@material-ui/core';\r\nimport DataGrid from '../components/DataGrid';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.refreshData = this.refreshData.bind(this);\r\n    }\r\n\r\n    static styles = {\r\n\t\tnoData: {\r\n\t\t\tdisplay: 'grid',\r\n\t\t\talignItems: 'center',\r\n\t\t\talignContent: 'center',\r\n\t\t\tjustifyContent: 'center',\r\n            placeContent: 'center',\r\n            width: '50%'\r\n\t\t}\r\n\t}\r\n\r\n    state = {\r\n        isLoggedIn: this.props.auth.isAuthenticated,\r\n        data: undefined,\r\n        columns: undefined,\r\n        loadGrid: false,\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let response;\r\n\r\n        await StirlandsHelper.ajaxPost(this.props.query, new FormData()).then( resp => {\r\n            response = resp; \r\n        });\r\n\r\n        this.setState({ data: response.data.result, columns: response.columns, loadGrid: response?.data?.result?.length > 1 });\r\n    }\r\n\r\n    refreshData(){\r\n        let response;\r\n\r\n        StirlandsHelper.ajaxPost(this.props.query, new FormData()).then( resp => {\r\n            response = resp; \r\n        });\r\n\r\n        this.setState({ data: response.data.result, columns: response.columns, loadGrid: response?.data?.result?.length > 1 });\r\n    }\r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n\r\n        if (this.state.loadGrid){\r\n            return (\r\n                <DataGrid user={this.props.auth.user} refreshData={this.refreshData} data={this.state.data} columns={this.state.columns} allowEdit={true} title={this.props.title} />\r\n            );\r\n        } else {\r\n            return (\r\n                <Paper className={classes.noData}>\r\n\t\t\t\t\t<Typography variant=\"h3\" component=\"p\">No data has been found!</Typography>\r\n\t\t\t\t</Paper>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(Home.styles)(Home))","import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nexport default class Authenticate extends Component {\r\n\r\n\r\n\trender() {\r\n\t\tconsole.log('Called Authenticate Render')\r\n\t\treturn this.props.isAuthenticated ? (\r\n\t\t\t<div>Not Authenticated</div>\r\n\t\t) : (\r\n\t\t\t<div>Authenticated</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { TextField, FormControl, Card, CardActions, CardContent } from '@material-ui/core';\r\nimport { Container, Button, withStyles, withTheme } from '@material-ui/core';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\nimport { Router, Redirect, useHistory, withRouter } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.handleLoginClick = this.handleLoginClick.bind(this);\r\n\t}\r\n\r\n\tstate = { \r\n\t\tusername: null, \r\n\t\tpassword: null, \r\n\t\tisLoggedIn: false,\r\n\t\tloginFailed: null,\r\n\t}\r\n\r\n\tstatic style = theme => {\r\n\t\treturn {\r\n\t\t\tgrid: {\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tplaceContent: 'center',\r\n\t\t\t\tplaceSelf: 'center',\r\n\t\t\t\theight: '100%',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t},\r\n\t\t\tform: {\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridAutoFlow: 'row',\r\n\t\t\t\tgap: '1.5rem',\r\n\t\t\t\theight: 'min-content',\r\n\t\t\t},\r\n\t\t\tloginButton: {\r\n\t\t\t\tpadding: '5px',\r\n\t\t\t\tborderRadius: '5px', \r\n\t\t\t},\r\n\t\t\tformControl: {\r\n\t\t\t\tpadding: '2rem',\r\n\t\t\t\tborderRadius: '5px',\r\n\t\t\t},\r\n\t\t\tinputLabel: {\r\n\t\t\t\tfontSize: '1.2rem'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet auth;\r\n\t\tawait StirlandsHelper.checkAuthentication().then(resp =>{\r\n\t\t\tconsole.log(resp);\r\n\t\t\tauth = resp;\r\n\t\t});\r\n\t\t\r\n\t\tthis.setState({isLoggedIn: auth.isAuthenticated});\r\n\t}\r\n\r\n\thandleLoginClick(event){\r\n\t\tlet formData = new FormData();\r\n\t\tObject.keys(this.state).forEach(key => formData.append(key, this.state[key]));\r\n\r\n\t\tlet resp = StirlandsHelper.ajaxPost(\"login\", formData);\r\n\t\tresp.then(r => {\r\n\t\t\tconsole.log(r);\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoggedIn: r.isAuthenticated,\r\n\t\t\t\tloginFailed: !r.isAuthenticated\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { history, classes } = this.props;\r\n\r\n\t\tif (this.state.isLoggedIn)\r\n\t\t\thistory.push(\"/\");\r\n\r\n\t\tconst inputProps = {\r\n\t\t\tstep: 300,\r\n\t\t\tclassName: classes.formControl\r\n\t\t}\r\n\r\n\t\tconst labelProps = {\r\n\t\t\tclassName: classes.inputLabel,\r\n\t\t\trequired: true,\r\n\t\t\tcolor: 'primary',\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Container className={classes.grid}>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<form className={classes.form}>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\terror={this.state.loginFailed}\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={labelProps} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Username\" \r\n\t\t\t\t\t\t\t\t\tinputProps={inputProps} \r\n\t\t\t\t\t\t\t\t\tclassName={classes.formControl} \r\n\t\t\t\t\t\t\t\t\tid=\"username\" name=\"usernmae\" placeholder=\"Enter Username\" \r\n\t\t\t\t\t\t\t\t\tonChange={ (event) => { this.setState({ username: event.target.value }) }} \r\n\t\t\t\t\t\t\t\t\tonKeyPress={(event) => { \r\n\t\t\t\t\t\t\t\t\t\tif (event.key === 'Enter' && (this.state.username && this.state.password)){\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleLoginClick(event);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\terror={this.state.loginFailed} \r\n\t\t\t\t\t\t\t\t\tInputLabelProps={labelProps} \r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\" \r\n\t\t\t\t\t\t\t\t\tinputProps={inputProps} \r\n\t\t\t\t\t\t\t\t\tclassName={classes.formControl} \r\n\t\t\t\t\t\t\t\t\tid=\"password\" name=\"password\" type=\"password\" placeholder=\"Enter password here\"\r\n\t\t\t\t\t\t\t\t\tonChange={(event) =>  this.setState({password: event.target.value})}\r\n\t\t\t\t\t\t\t\t\tonKeyPress={(event) => { \r\n\t\t\t\t\t\t\t\t\t\tif (event.key === 'Enter' && (this.state.username && this.state.password)){\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleLoginClick(event);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t<Button className={classes.loginButton} onClick={(event) => this.handleLoginClick(event)}>Login</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withTheme(withStyles(Login.style)(Login)));","import React, { Component } from 'react';\r\nimport { Typography, Paper, Card } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nclass Error404 extends Component {\r\n\tstatic styles = {\r\n\t\troot: {\r\n\t\t\tplaceSelf: 'center',\r\n\t\t\talignSelf: 'center',\r\n\t\t\talignItems: 'center',\r\n\t\t\tplaceItems: 'center',\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridAutoRows: '4rem',\r\n\t\t\twidth: 'calc(100% - 65%)',\r\n\t\t\tmarginLeft: 'calc(100% - 75%)',\r\n\t\t\tpadding: '10px',\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n\t\tconst classes = this.props.classes;\r\n\t\tconsole.log(this.props.location);\r\n\t\treturn (\r\n\t\t\t<Paper className={classes.root}>\r\n\t\t\t\t<Typography variant=\"h4\" component=\"p\">Uh oh! The page: {this.props.location.pathname} doesn't exist!</Typography>\r\n\t\t\t\t<Typography variant=\"caption\" component=\"p\">Please use the menu to navigate to a page that does!</Typography>\r\n\t\t\t</Paper>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(Error404.styles)(Error404))","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link as RouterLink, Redirect, withRouter } from \"react-router-dom\";\r\nimport Home from '../pages/Home';\r\nimport * as Icons from '@material-ui/icons';\r\nimport { MenuBook, Menu as MenuIcon } from '@material-ui/icons';\r\nimport { Button, Paper, List, ListItem, ListItemText, ListItemIcon, withTheme, withStyles } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Authenticate from \"./Authenticate\";\r\nimport Login from \"../pages/Login\";\r\nimport Error404 from \"../pages/Error404\";\r\n\r\nclass Menu extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.toggleDrawer = this.toggleDrawer.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\tisAuthenticated: this.props.isAuthenticated,\r\n\t\tuser: this.props.user,\r\n\t\tdrawerOpen: this.props.drawerOpen,\r\n\t\ttoggle: this.props.drawerTrigger,\r\n\t\tpages: this.props.pages,\r\n\t}\r\n\r\n    static style = theme => {\r\n    \treturn {\r\n    \t\tgrid: {\r\n    \t\t\tplaceSelf: 'center',\r\n    \t\t\theight: '100%',\r\n    \t\t\twidth: '100%',\r\n\t\t\t},\r\n\t\t\terror404: {\r\n\t\t\t\tplaceSelf: 'center',\r\n\t\t\t\talignSelf: 'center',\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridAutoRows: '4rem',\r\n\t\t\t\twidth: '40%',\r\n\r\n\t\t\t}\r\n    \t}\r\n    }\r\n\r\n\r\n\tProtectedRoute({ children, isAuthenticated, ...rest }) {\t\r\n\t\treturn (\r\n\t\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={ ({location}) =>\r\n\t\t\t\tisAuthenticated ?\t(children) : (\r\n\t\t\t\t<Redirect\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\tstate: { from: location }\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\ttoggleDrawer = () => this.props.drawerTrigger;\r\n\r\n\trender(){\r\n\t\tconst getIcon = (iconName) => Object.entries(Icons).find(([name, exported]) => name.toLowerCase() === iconName)[1];\r\n\t\tconst  { history, classes } = this.props;\r\n\r\n\t\tfunction ListItemLink (props){\r\n\t\t\tconst { icon, primary, to, onClick } = props;\r\n\r\n\t\t\t  const CustomLink = React.useMemo(\r\n\t\t\t\t() =>\r\n\t\t\t\tReact.forwardRef((linkProps, ref) => (\r\n\t\t\t\t\t<RouterLink ref={ref} to={to} {...linkProps} />\r\n\t\t\t\t)),\r\n\t\t\t\t[to],\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<li onClick={onClick}>\r\n\t\t\t\t\t<ListItem component={CustomLink}>\r\n\t\t\t\t\t\t{icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n\t\t\t\t\t\t<ListItemText primary={primary} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className={classes.grid}>\r\n\t\t\t\t<Drawer open={this.props.drawerOpen}>\r\n\t\t\t\t\t<Paper elevation={0}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItemLink primary=\"Home\" to=\"/players\" icon={ < Icons.PlayArrow />}/>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.pages.map(page => {\r\n\t\t\t\t\t\t\t\t\tconst Icon = getIcon(page.icon);\r\n\t\t\t\t\t\t\t\t\treturn <ListItemLink key={page.route} primary={page.title} to={page.route} icon={ <Icon /> } onClick={this.props.drawerTrigger}/>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Drawer>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<Redirect to=\"/players\"/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/players\">\r\n\t\t\t\t\t\t<Home query=\"getPlayers\" title=\"Players\" auth={{ isAuthenticated: this.state.isAuthenticated, user: this.state.user }}/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path=\"/login\">\r\n\t\t\t\t\t\t<Login/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t\t<Error404 className={classes.error404}/>\t\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(withTheme(withStyles(Menu.style)(Menu)))","import { ExitToApp } from '@material-ui/icons';\r\nimport React, { Component } from 'react';\r\nimport { Link as RouterLink, withRouter, Router } from 'react-router-dom';\r\nimport { withStyles, withTheme } from '@material-ui/core/styles';\r\nimport { Link, Typography, Paper, IconButton, Button } from '@material-ui/core';\r\nimport StirlandsHelper from '../StirlandsHelper';\r\n\r\nclass LoginButton extends Component {\r\n\tstate = {\r\n\t\tisLoggedIn: this.props.isAuthenticated,\r\n\t\tuser: this.props.user\r\n\t}\r\n\r\n\r\n\tstatic style = theme =>  {\r\n\t\treturn {\r\n\t\t\tlb: {\r\n\t\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\ttextDecoration: 'none',\r\n\t\t\t},\r\n\t\t\r\n\t\t\tloginButton: {\r\n\t\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\ttextDecoration: 'none',\r\n\t\t\t},\r\n\t\t\tloggedInText: {\r\n\t\t\t\tmaxWidth: '100%',\r\n\t\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\t},\r\n\t\t\tpaper: {\r\n\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\theight: '2rem',\r\n\t\t\t\twidth: '14rem',\r\n\t\t\t\tplaceContent: 'center',\r\n\t\t\t\talignContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridAutoFlow: 'column',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet render;\r\n\t\tconst { classes } = this.props;\r\n\r\n\t\tif (this.state.isLoggedIn){\r\n\t\t\trender = (\r\n\t\t\t\t<Paper className={classes.paper} elevation={3}>\r\n\t\t\t\t\t<Typography component=\"span\" className={classes.loggedInText}>Logged in as { this.state.user.username }</Typography>\r\n\t\t\t\t\t<IconButton component={Link} to=\"/\" onClick={this.props.logout}>\r\n\t\t\t\t\t\t<ExitToApp />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Paper>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\trender = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link component={RouterLink} to=\"/login\" className={ classes.lb }>\r\n\t\t\t\t\t\t<Button className={ classes.loginButton }>\r\n\t\t\t\t\t\t\tlogin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport default withTheme(withStyles(LoginButton.style)(LoginButton));\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Menu  from './components/Menu';\r\nimport LoginButton  from './components/LoginButton';\r\nimport StirlandsHelper from './StirlandsHelper'\r\nimport { Backdrop, CircularProgress, CssBaseline, AppBar, Typography, IconButton, Toolbar, ThemeProvider} from '@material-ui/core';\r\nimport { Menu as MenuIcon } from '@material-ui/icons';\r\nimport './App.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { blue, pink } from '@material-ui/core/colors'\r\n\r\nconst muiTheme = createMuiTheme({\r\n  palette: {\r\n  \tprimary: {\r\n  \t\tmain: blue[700],\r\n\t  },\r\n\t  secondary: {\r\n\t\tmain: pink[500]\r\n\t  },\r\n  },\r\n});\r\n\r\nconst styles = (theme = muiTheme) => {\r\n\treturn {\r\n\t\troot: {\r\n\t\t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n\t\t\tborder: 0,\r\n\t\t\tborderRadius: 3,\r\n\t\t\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n\t\t\tcolor: 'black',\r\n\t\t\theight: 48,\r\n\t\t\tpadding: '0 30px',\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridAutoFlow: 'column'\r\n\t\t},\r\n\t\tbackdrop: {\r\n\t\t\tzIndex: 100,\r\n\t\t\tcolor: '#999'\r\n\t\t},\r\n\t\tbaseGrid: {\r\n\t\t\tbackgroundColor: 'rgb(100, 100, 100)',\r\n\t\t\tdisplay: 'grid',\r\n\t\t\tgridTemplateColumns: '1fr 3fr',\r\n\t\t},\r\n\t\tmenuButton: {\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tflexGrow: 1,\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleDrawerState = this.handleDrawerState.bind(this);\r\n\t\tthis.logout = this.logout.bind(this);\r\n\t}\r\n\t\r\n\tstate = {\r\n\t\tisAuthenticated: null,\r\n\t\tuser: null,\r\n\t\topen: true,\r\n\t\tdrawerOpen: false,\r\n\t\tpages: [],\r\n\t}\r\n\r\n\tasync componentDidMount(){\r\n\t\tlet auth, foundPages;\r\n\t\tawait StirlandsHelper.checkAuthentication().then(resp => {\r\n\t\t\tauth = resp;\r\n\t\t});\r\n\r\n\t\tawait StirlandsHelper.ajaxPost(\"pages\", new FormData()).then(resp =>{\r\n\t\t\tfoundPages = resp;\r\n\t\t});\r\n\r\n\t\tthis.setState({ isAuthenticated: auth.isAuthenticated, user: auth.user[0], pages: foundPages })\r\n\t}\r\n\r\n\thandleDrawerState(){\r\n\t\tthis.setState({ drawerOpen: !this.state.drawerOpen });\r\n\t}\r\n\r\n\tlogout() {\r\n\t\tStirlandsHelper.ajaxPost(\"logout\", new FormData()).then(resolved => resolved);\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst handleClose = () => {\r\n\t\t\tthis.setState({ open: false});\r\n\t\t};\r\n\r\n\t\tif (this.state.isAuthenticated === null){\r\n\t\t\treturn (\r\n\t\t\t\t<Backdrop className={classes.backdrop} open={ this.state.open } onClick={handleClose}>\r\n\t\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t\t</Backdrop>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<CssBaseline>\r\n\t\t\t\t\t<ThemeProvider theme={muiTheme}>\r\n\t\t\t\t\t\t<Router basename=\"DAP522/assignment/\">\r\n\t\t\t\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t\t\t<IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\" aria-label=\"menu\"  onClick={this.handleDrawerState} >\r\n\t\t\t\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.title} variant=\"h6\"> Stirlands Cricket Club </Typography>\r\n\t\t\t\t\t\t\t\t\t<LoginButton  logout={this.logout} isAuthenticated={ this.state.isAuthenticated } user={ this.state.user } />\r\n\t\t\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t\t\t<div className=\"rootGrid\">\r\n\t\t\t\t\t\t\t\t<Menu  pages={this.state.pages} drawerOpen={this.state.drawerOpen} drawerTrigger={this.handleDrawerState} className={classes.root} isAuthenticated={this.state.isAuthenticated} user={this.state.user}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Router>\r\n\t\t\t\t\t</ThemeProvider>\r\n\t\t\t\t</CssBaseline>\r\n\t\t\t);\r\n\t\t}\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}